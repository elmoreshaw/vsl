{"ast":null,"code":"'use strict';\n\nvar toString = Object.prototype.toString,\n    hasOwnProperty = Object.prototype.hasOwnProperty;\n\nmodule.exports = function (object) {\n  if (!object) return console.warn('bindAll requires at least one argument.');\n  var functions = Array.prototype.slice.call(arguments, 1);\n\n  if (functions.length === 0) {\n    for (var method in object) {\n      if (hasOwnProperty.call(object, method)) {\n        if (typeof object[method] == 'function' && toString.call(object[method]) == \"[object Function]\") {\n          functions.push(method);\n        }\n      }\n    }\n  }\n\n  for (var i = 0; i < functions.length; i++) {\n    var f = functions[i];\n    object[f] = bind(object[f], object);\n  }\n};\n/*\n    Faster bind without specific-case checking. (see https://coderwall.com/p/oi3j3w).\n    bindAll is only needed for events binding so no need to make slow fixes for constructor\n    or partial application.\n*/\n\n\nfunction bind(func, context) {\n  return function () {\n    return func.apply(context, arguments);\n  };\n}","map":{"version":3,"sources":["/home/grady/Documents/work/Vessel/dApp/vessel-home/node_modules/bindall-standalone/index.js"],"names":["toString","Object","prototype","hasOwnProperty","module","exports","object","console","warn","functions","Array","slice","call","arguments","length","method","push","i","f","bind","func","context","apply"],"mappings":"AAAA;;AAEA,IAAIA,QAAQ,GAAGC,MAAM,CAACC,SAAP,CAAiBF,QAAhC;AAAA,IACIG,cAAc,GAAGF,MAAM,CAACC,SAAP,CAAiBC,cADtC;;AAGAC,MAAM,CAACC,OAAP,GAAiB,UAASC,MAAT,EAAiB;AAC9B,MAAG,CAACA,MAAJ,EAAY,OAAOC,OAAO,CAACC,IAAR,CAAa,yCAAb,CAAP;AAEZ,MAAIC,SAAS,GAAGC,KAAK,CAACR,SAAN,CAAgBS,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,EAAsC,CAAtC,CAAhB;;AAEA,MAAIJ,SAAS,CAACK,MAAV,KAAqB,CAAzB,EAA4B;AAExB,SAAK,IAAIC,MAAT,IAAmBT,MAAnB,EAA2B;AACvB,UAAGH,cAAc,CAACS,IAAf,CAAoBN,MAApB,EAA4BS,MAA5B,CAAH,EAAwC;AACpC,YAAG,OAAOT,MAAM,CAACS,MAAD,CAAb,IAAyB,UAAzB,IAAuCf,QAAQ,CAACY,IAAT,CAAcN,MAAM,CAACS,MAAD,CAApB,KAAiC,mBAA3E,EAAgG;AAC5FN,UAAAA,SAAS,CAACO,IAAV,CAAeD,MAAf;AACH;AACJ;AACJ;AACJ;;AAED,OAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGR,SAAS,CAACK,MAA7B,EAAqCG,CAAC,EAAtC,EAA0C;AACtC,QAAIC,CAAC,GAAGT,SAAS,CAACQ,CAAD,CAAjB;AACAX,IAAAA,MAAM,CAACY,CAAD,CAAN,GAAYC,IAAI,CAACb,MAAM,CAACY,CAAD,CAAP,EAAYZ,MAAZ,CAAhB;AACH;AACJ,CApBD;AAsBA;AACA;AACA;AACA;AACA;;;AACA,SAASa,IAAT,CAAcC,IAAd,EAAoBC,OAApB,EAA6B;AAC3B,SAAO,YAAW;AAChB,WAAOD,IAAI,CAACE,KAAL,CAAWD,OAAX,EAAoBR,SAApB,CAAP;AACD,GAFD;AAGD","sourcesContent":["'use strict';\n\nvar toString = Object.prototype.toString,\n    hasOwnProperty = Object.prototype.hasOwnProperty;\n\nmodule.exports = function(object) {\n    if(!object) return console.warn('bindAll requires at least one argument.');\n\n    var functions = Array.prototype.slice.call(arguments, 1);\n\n    if (functions.length === 0) {\n\n        for (var method in object) {\n            if(hasOwnProperty.call(object, method)) {\n                if(typeof object[method] == 'function' && toString.call(object[method]) == \"[object Function]\") {\n                    functions.push(method);\n                }\n            }\n        }\n    }\n\n    for(var i = 0; i < functions.length; i++) {\n        var f = functions[i];\n        object[f] = bind(object[f], object);\n    }\n};\n\n/*\n    Faster bind without specific-case checking. (see https://coderwall.com/p/oi3j3w).\n    bindAll is only needed for events binding so no need to make slow fixes for constructor\n    or partial application.\n*/\nfunction bind(func, context) {\n  return function() {\n    return func.apply(context, arguments);\n  };\n}"]},"metadata":{},"sourceType":"script"}