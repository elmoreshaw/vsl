{"ast":null,"code":"var _jsxFileName = \"/home/grady/Documents/work/Vessel/dApp/vessel-home/src/components/smoothScroll/smoothScroll.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport './SmoothScroll.css';\nimport useWindowSize from '../../hooks/useWindowSize';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SmoothScroll = ({\n  children\n}) => {\n  _s();\n\n  // 1.\n  const windowSize = useWindowSize(); //2.\n\n  const scrollingContainerRef = useRef(); // 3.\n\n  const data = {\n    ease: 0.1,\n    current: 0,\n    previous: 0,\n    rounded: 0\n  }; // 4.\n\n  useEffect(() => {\n    setBodyHeight();\n  }, [windowSize.height]);\n\n  const setBodyHeight = () => {\n    document.body.style.height = `${scrollingContainerRef.current.getBoundingClientRect().height}px`;\n  }; // 5.\n\n\n  useEffect(() => {\n    requestAnimationFrame(() => smoothScrollingHandler());\n  }, []);\n\n  const smoothScrollingHandler = () => {\n    data.current = window.scrollY;\n    data.previous += (data.current - data.previous) * data.ease;\n    data.rounded = Math.round(data.previous * 100) / 100;\n    scrollingContainerRef.current.style.transform = `translateY(-${data.previous}px)`; // Recursive call\n\n    requestAnimationFrame(() => smoothScrollingHandler());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"parent\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: scrollingContainerRef,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 3\n  }, this);\n};\n\n_s(SmoothScroll, \"Cr5RCPykkoJ6IjhTfhTAOp8wFQU=\", false, function () {\n  return [useWindowSize];\n});\n\n_c = SmoothScroll;\nexport default SmoothScroll;\n\nvar _c;\n\n$RefreshReg$(_c, \"SmoothScroll\");","map":{"version":3,"sources":["/home/grady/Documents/work/Vessel/dApp/vessel-home/src/components/smoothScroll/smoothScroll.js"],"names":["React","useEffect","useRef","useWindowSize","SmoothScroll","children","windowSize","scrollingContainerRef","data","ease","current","previous","rounded","setBodyHeight","height","document","body","style","getBoundingClientRect","requestAnimationFrame","smoothScrollingHandler","window","scrollY","Math","round","transform"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AAEA,OAAO,oBAAP;AACA,OAAOC,aAAP,MAA0B,2BAA1B;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACtC;AACA,QAAMC,UAAU,GAAGH,aAAa,EAAhC,CAFsC,CAItC;;AACA,QAAMI,qBAAqB,GAAGL,MAAM,EAApC,CALsC,CAOtC;;AACA,QAAMM,IAAI,GAAG;AACZC,IAAAA,IAAI,EAAE,GADM;AAEZC,IAAAA,OAAO,EAAE,CAFG;AAGZC,IAAAA,QAAQ,EAAE,CAHE;AAIZC,IAAAA,OAAO,EAAE;AAJG,GAAb,CARsC,CAetC;;AACAX,EAAAA,SAAS,CAAC,MAAM;AACfY,IAAAA,aAAa;AACb,GAFQ,EAEN,CAACP,UAAU,CAACQ,MAAZ,CAFM,CAAT;;AAIA,QAAMD,aAAa,GAAG,MAAM;AAC3BE,IAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBH,MAApB,GAA8B,GAAEP,qBAAqB,CAACG,OAAtB,CAA8BQ,qBAA9B,GAAsDJ,MAAO,IAA7F;AACA,GAFD,CApBsC,CAwBtC;;;AACAb,EAAAA,SAAS,CAAC,MAAM;AACfkB,IAAAA,qBAAqB,CAAC,MAAMC,sBAAsB,EAA7B,CAArB;AACA,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,sBAAsB,GAAG,MAAM;AACpCZ,IAAAA,IAAI,CAACE,OAAL,GAAeW,MAAM,CAACC,OAAtB;AACAd,IAAAA,IAAI,CAACG,QAAL,IAAiB,CAACH,IAAI,CAACE,OAAL,GAAeF,IAAI,CAACG,QAArB,IAAiCH,IAAI,CAACC,IAAvD;AACAD,IAAAA,IAAI,CAACI,OAAL,GAAeW,IAAI,CAACC,KAAL,CAAWhB,IAAI,CAACG,QAAL,GAAgB,GAA3B,IAAkC,GAAjD;AAEAJ,IAAAA,qBAAqB,CAACG,OAAtB,CAA8BO,KAA9B,CAAoCQ,SAApC,GAAiD,eAAcjB,IAAI,CAACG,QAAS,KAA7E,CALoC,CAOpC;;AACAQ,IAAAA,qBAAqB,CAAC,MAAMC,sBAAsB,EAA7B,CAArB;AACA,GATD;;AAWA,sBACC;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,2BACC;AAAK,MAAA,GAAG,EAAEb,qBAAV;AAAA,gBAAkCF;AAAlC;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAKA,CA7CD;;GAAMD,Y;UAEcD,a;;;KAFdC,Y;AA+CN,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useRef } from 'react';\n\nimport './SmoothScroll.css';\nimport useWindowSize from '../../hooks/useWindowSize';\n\nconst SmoothScroll = ({ children }) => {\n\t// 1.\n\tconst windowSize = useWindowSize();\n\n\t//2.\n\tconst scrollingContainerRef = useRef();\n\n\t// 3.\n\tconst data = {\n\t\tease: 0.1,\n\t\tcurrent: 0,\n\t\tprevious: 0,\n\t\trounded: 0,\n\t};\n\n\t// 4.\n\tuseEffect(() => {\n\t\tsetBodyHeight();\n\t}, [windowSize.height]);\n\n\tconst setBodyHeight = () => {\n\t\tdocument.body.style.height = `${scrollingContainerRef.current.getBoundingClientRect().height}px`;\n\t};\n\n\t// 5.\n\tuseEffect(() => {\n\t\trequestAnimationFrame(() => smoothScrollingHandler());\n\t}, []);\n\n\tconst smoothScrollingHandler = () => {\n\t\tdata.current = window.scrollY;\n\t\tdata.previous += (data.current - data.previous) * data.ease;\n\t\tdata.rounded = Math.round(data.previous * 100) / 100;\n\n\t\tscrollingContainerRef.current.style.transform = `translateY(-${data.previous}px)`;\n\n\t\t// Recursive call\n\t\trequestAnimationFrame(() => smoothScrollingHandler());\n\t};\n\n\treturn (\n\t\t<div className=\"parent\">\n\t\t\t<div ref={scrollingContainerRef}>{children}</div>\n\t\t</div>\n\t);\n};\n\nexport default SmoothScroll;\n"]},"metadata":{},"sourceType":"module"}