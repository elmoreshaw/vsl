{"ast":null,"code":"// for compression\nvar win = window;\nvar doc = document || {};\nvar root = doc.documentElement || {}; // detect if we need to use firefox KeyEvents vs KeyboardEvents\n\nvar use_key_event = true;\n\ntry {\n  doc.createEvent('KeyEvents');\n} catch (err) {\n  use_key_event = false;\n} // Workaround for https://bugs.webkit.org/show_bug.cgi?id=16735\n\n\nfunction check_kb(ev, opts) {\n  if (ev.ctrlKey != (opts.ctrlKey || false) || ev.altKey != (opts.altKey || false) || ev.shiftKey != (opts.shiftKey || false) || ev.metaKey != (opts.metaKey || false) || ev.keyCode != (opts.keyCode || 0) || ev.charCode != (opts.charCode || 0)) {\n    ev = document.createEvent('Event');\n    ev.initEvent(opts.type, opts.bubbles, opts.cancelable);\n    ev.ctrlKey = opts.ctrlKey || false;\n    ev.altKey = opts.altKey || false;\n    ev.shiftKey = opts.shiftKey || false;\n    ev.metaKey = opts.metaKey || false;\n    ev.keyCode = opts.keyCode || 0;\n    ev.charCode = opts.charCode || 0;\n  }\n\n  return ev;\n} // modern browsers, do a proper dispatchEvent()\n\n\nvar modern = function (type, opts) {\n  opts = opts || {}; // which init fn do we use\n\n  var family = typeOf(type);\n  var init_fam = family;\n\n  if (family === 'KeyboardEvent' && use_key_event) {\n    family = 'KeyEvents';\n    init_fam = 'KeyEvent';\n  }\n\n  var ev = doc.createEvent(family);\n  var init_fn = 'init' + init_fam;\n  var init = typeof ev[init_fn] === 'function' ? init_fn : 'initEvent';\n  var sig = initSignatures[init];\n  var args = [];\n  var used = {};\n  opts.type = type;\n\n  for (var i = 0; i < sig.length; ++i) {\n    var key = sig[i];\n    var val = opts[key]; // if no user specified value, then use event default\n\n    if (val === undefined) {\n      val = ev[key];\n    }\n\n    used[key] = true;\n    args.push(val);\n  }\n\n  ev[init].apply(ev, args); // webkit key event issue workaround\n\n  if (family === 'KeyboardEvent') {\n    ev = check_kb(ev, opts);\n  } // attach remaining unused options to the object\n\n\n  for (var key in opts) {\n    if (!used[key]) {\n      ev[key] = opts[key];\n    }\n  }\n\n  return ev;\n};\n\nvar legacy = function (type, opts) {\n  opts = opts || {};\n  var ev = doc.createEventObject();\n  ev.type = type;\n\n  for (var key in opts) {\n    if (opts[key] !== undefined) {\n      ev[key] = opts[key];\n    }\n  }\n\n  return ev;\n}; // expose either the modern version of event generation or legacy\n// depending on what we support\n// avoids if statements in the code later\n\n\nmodule.exports = doc.createEvent ? modern : legacy;\n\nvar initSignatures = require('./init.json');\n\nvar types = require('./types.json');\n\nvar typeOf = function () {\n  var typs = {};\n\n  for (var key in types) {\n    var ts = types[key];\n\n    for (var i = 0; i < ts.length; i++) {\n      typs[ts[i]] = key;\n    }\n  }\n\n  return function (name) {\n    return typs[name] || 'Event';\n  };\n}();","map":{"version":3,"sources":["/home/grady/Documents/work/Vessel/dApp/vessel-home/node_modules/synthetic-dom-events/index.js"],"names":["win","window","doc","document","root","documentElement","use_key_event","createEvent","err","check_kb","ev","opts","ctrlKey","altKey","shiftKey","metaKey","keyCode","charCode","initEvent","type","bubbles","cancelable","modern","family","typeOf","init_fam","init_fn","init","sig","initSignatures","args","used","i","length","key","val","undefined","push","apply","legacy","createEventObject","module","exports","require","types","typs","ts","name"],"mappings":"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","sourcesContent":["\n// for compression\nvar win = window;\nvar doc = document || {};\nvar root = doc.documentElement || {};\n\n// detect if we need to use firefox KeyEvents vs KeyboardEvents\nvar use_key_event = true;\ntry {\n    doc.createEvent('KeyEvents');\n}\ncatch (err) {\n    use_key_event = false;\n}\n\n// Workaround for https://bugs.webkit.org/show_bug.cgi?id=16735\nfunction check_kb(ev, opts) {\n    if (ev.ctrlKey != (opts.ctrlKey || false) ||\n        ev.altKey != (opts.altKey || false) ||\n        ev.shiftKey != (opts.shiftKey || false) ||\n        ev.metaKey != (opts.metaKey || false) ||\n        ev.keyCode != (opts.keyCode || 0) ||\n        ev.charCode != (opts.charCode || 0)) {\n\n        ev = document.createEvent('Event');\n        ev.initEvent(opts.type, opts.bubbles, opts.cancelable);\n        ev.ctrlKey  = opts.ctrlKey || false;\n        ev.altKey   = opts.altKey || false;\n        ev.shiftKey = opts.shiftKey || false;\n        ev.metaKey  = opts.metaKey || false;\n        ev.keyCode  = opts.keyCode || 0;\n        ev.charCode = opts.charCode || 0;\n    }\n\n    return ev;\n}\n\n// modern browsers, do a proper dispatchEvent()\nvar modern = function(type, opts) {\n    opts = opts || {};\n\n    // which init fn do we use\n    var family = typeOf(type);\n    var init_fam = family;\n    if (family === 'KeyboardEvent' && use_key_event) {\n        family = 'KeyEvents';\n        init_fam = 'KeyEvent';\n    }\n\n    var ev = doc.createEvent(family);\n    var init_fn = 'init' + init_fam;\n    var init = typeof ev[init_fn] === 'function' ? init_fn : 'initEvent';\n\n    var sig = initSignatures[init];\n    var args = [];\n    var used = {};\n\n    opts.type = type;\n    for (var i = 0; i < sig.length; ++i) {\n        var key = sig[i];\n        var val = opts[key];\n        // if no user specified value, then use event default\n        if (val === undefined) {\n            val = ev[key];\n        }\n        used[key] = true;\n        args.push(val);\n    }\n    ev[init].apply(ev, args);\n\n    // webkit key event issue workaround\n    if (family === 'KeyboardEvent') {\n        ev = check_kb(ev, opts);\n    }\n\n    // attach remaining unused options to the object\n    for (var key in opts) {\n        if (!used[key]) {\n            ev[key] = opts[key];\n        }\n    }\n\n    return ev;\n};\n\nvar legacy = function (type, opts) {\n    opts = opts || {};\n    var ev = doc.createEventObject();\n\n    ev.type = type;\n    for (var key in opts) {\n        if (opts[key] !== undefined) {\n            ev[key] = opts[key];\n        }\n    }\n\n    return ev;\n};\n\n// expose either the modern version of event generation or legacy\n// depending on what we support\n// avoids if statements in the code later\nmodule.exports = doc.createEvent ? modern : legacy;\n\nvar initSignatures = require('./init.json');\nvar types = require('./types.json');\nvar typeOf = (function () {\n    var typs = {};\n    for (var key in types) {\n        var ts = types[key];\n        for (var i = 0; i < ts.length; i++) {\n            typs[ts[i]] = key;\n        }\n    }\n\n    return function (name) {\n        return typs[name] || 'Event';\n    };\n})();\n"]},"metadata":{},"sourceType":"script"}